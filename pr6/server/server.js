// server.js
const express = require("express");
const cors = require("cors");
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
require("dotenv").config();

const app = express();
const PORT = 5000;
const SECRET_KEY = process.env.SECRET_KEY;

app.use(cors());
app.use(express.json());

let users = []; // –¢—É—Ç —Ö—Ä–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–∞ –±–∞–∑–∞)
const books = [
    { id: 1, title: '–í–æ–π–Ω–∞ –∏ –º–∏—Ä', author: '–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π', description: '–≠–ø–æ–ø–µ—è –æ —Ä—É—Å—Å–∫–æ–π –∞—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç–∏–∏.', image: 'https://sun9-78.userapi.com/impg/G2OzObHKHW2mx2XbMsuKUFNQ0CyLvTyHnBoukg/6rn1z9H3UtU.jpg?size=770x686&quality=95&sign=819c02c135e56ee24dd5987e9f960ef5&c_uniq_tag=lEZ1-gnwJyiBCuDCA5lM7-klocQSn-bQxbh6mKmdVwg&type=album' },
    { id: 2, title: '1984', author: '–î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª', description: '–ê–Ω—Ç–∏—É—Ç–æ–ø–∏—è –æ —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–µ.', image: 'https://avatars.mds.yandex.net/i?id=2074d45b2b7dcfecaf928e1030334c93_l-5129576-images-thumbs&n=13' },
    { id: 3, title: '–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä', author: '–î–∂. –ö. –†–æ—É–ª–∏–Ω–≥', description: '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤–æ–ª—à–µ–±–Ω–∏–∫–∞ –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–∞.', image: 'https://avatars.mds.yandex.net/get-mpic/5254153/img_id481576898018605918.jpeg/600x800' }
  ];

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
function authenticate(req, res, next) {
  const token = req.headers.authorization && req.headers.authorization.split(' ')[1]; // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  
  if (!token) {
    return res.status(401).json({ message: "–ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏" });
  }

  jwt.verify(token, SECRET_KEY, (err, decoded) => {
    if (err) {
      return res.status(403).json({ message: "–ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫—à–∏–π —Ç–æ–∫–µ–Ω" });
    }
    req.user = decoded; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    next(); // –î–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
  });
}

// üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
app.post("/register", async (req, res) => {
  const { email, password } = req.body;
  if (users.find((user) => user.email === email)) {
    return res.status(400).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" });
  }

  const hashedPassword = await bcrypt.hash(password, 10);
  users.push({ email, password: hashedPassword });
  res.json({ message: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞" });
});

// üîπ –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
app.post("/login", async (req, res) => {
  const { email, password } = req.body;
  const user = users.find((user) => user.email === email);
  if (!user || !(await bcrypt.compare(password, user.password))) {
    return res.status(401).json({ message: "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ" });
  }

  const token = jwt.sign({ email }, SECRET_KEY, { expiresIn: "1h" });
  res.json({ token });
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
app.get("/books", authenticate, (req, res) => {
  res.json(books); // –û—Ç–¥–∞–µ–º –∫–Ω–∏–≥–∏ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
});

app.get("/book/:id", authenticate, (req, res) => {
    const { id } = req.params;
    const book = books.find((b) => b.id === parseInt(id)); // –ò—â–µ–º –∫–Ω–∏–≥—É –ø–æ id
    if (!book) {
      return res.status(404).json({ message: "–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" }); // –ï—Å–ª–∏ –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    }
    res.json(book); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É –≤ –æ—Ç–≤–µ—Ç–µ
  });

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
